version: "3"
services:
  nacos:
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - NACOS_AUTH_IDENTITY_KEY=serverIdentity
      - NACOS_AUTH_IDENTITY_VALUE=security
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    networks:
      - app_network
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./nacos/prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - nacos
    restart: on-failure
    networks:
      - app_network
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: on-failure
    networks:
      - app_network

  seata-postgres:
    image: postgres:latest
    container_name: seata-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=pm_assistant
    ports:
      - "5433:5432"
    volumes:
      - seata_postgres_data:/var/lib/postgresql/data
      - "./script/db:/docker-entrypoint-initdb.d"
    networks:
      - app_network

  user-postgres:
    image: postgres:latest
    container_name: user-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=user
    ports:
      - "5434:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
      - "./script/db:/docker-entrypoint-initdb.d"
    networks:
      - app_network

  project-postgres:
    image: postgres:latest
    container_name: project-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=project
    ports:
      - "5435:5432"
    volumes:
      - project_postgres_data:/var/lib/postgresql/data
      - "./script/db:/docker-entrypoint-initdb.d"
    networks:
      - app_network

  task-postgres:
    image: postgres:latest
    container_name: task-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=task
    ports:
      - "5436:5432"
    volumes:
      - task_postgres_data:/var/lib/postgresql/data
      - "./script/db:/docker-entrypoint-initdb.d"
    networks:
      - app_network

  seata-server:
    image: seataio/seata-server:${SEATA_VERSION}
    hostname: seata-server
    ports:
      - "7091:7091"
      - "8091:8091"
    environment:
      - SEATA_PORT=8091
      - SEATA_IP=${HOST_IP}
    volumes:
      # - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
      # - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区
      - "./seata/application.yml:/seata-server/resources/application.yml"
    networks:
      - app_network
    depends_on:
      - nacos
      - seata-postgres

  user-service:
    build: ./dubbo-samples-seata-user # 假设Dockerfile在user-app目录
    environment:
      - POSTGRES_HOST=user-postgres
      - POSTGRES_PORT=5432
      - NACOS_HOST=nacos
      - NACOS_PORT=8848
    ports:
      - "8081:8081"
      - "20890:20890"  # dubbo端口
    networks:
      - app_network
    depends_on:
      - nacos
      - seata-server
      - user-postgres

  project-service:
    build: ./dubbo-samples-seata-project
    environment:
      - POSTGRES_HOST=project-postgres
      - POSTGRES_PORT=5432
      - NACOS_HOST=nacos
      - NACOS_PORT=8848
    ports:
      - "8082:8082"
      - "20891:20891"
    networks:
      - app_network
    depends_on:
      - nacos
      - seata-server
      - project-postgres

  task-service:
    build: ./dubbo-samples-seata-task
    environment:
      - POSTGRES_HOST=task-postgres
      - POSTGRES_PORT=5432
      - NACOS_HOST=nacos
      - NACOS_PORT=8848
    ports:
      - "8083:8083"
      - "20893:20893"
    networks:
      - app_network
    depends_on:
      - nacos
      - seata-server
      - task-postgres

networks:
  app_network:
    driver: bridge

volumes:
  seata_postgres_data:
  user_postgres_data:
  project_postgres_data:
  task_postgres_data:
